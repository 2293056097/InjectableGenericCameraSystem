// Hotsampling.
re3demo.exe+18B9F894 - 45 0F57 D2            - xorps xmm10,xmm10
re3demo.exe+18B9F898 - 44 0F2F 53 48         - comiss xmm10,[rbx+48]
re3demo.exe+18B9F89D - 72 06                 - jb re3demo.exe+18B9F8A5
re3demo.exe+18B9F89F - F3 44 0F11 43 48      - movss [rbx+48],xmm8
re3demo.exe+18B9F8A5 - 44 0F2F 53 4C         - comiss xmm10,[rbx+4C]
re3demo.exe+18B9F8AA - 72 06                 - jb re3demo.exe+18B9F8B2
re3demo.exe+18B9F8AC - F3 44 0F11 4B 4C      - movss [rbx+4C],xmm9
re3demo.exe+18B9F8B2 - 48 8D 45 10           - lea rax,[rbp+10]					<< JMP landing address
re3demo.exe+18B9F8B6 - 48 89 45 18           - mov [rbp+18],rax					
re3demo.exe+18B9F8BA - 48 8D 3D 3F0746E7     - lea rdi,[re3demo.exe]			<<< RIP relative, can't intercept
re3demo.exe+18B9F8C1 - 8B 43 74              - mov eax,[rbx+74]					<<<<<<< Read camera type. Set to 0 for FIT.
re3demo.exe+18B9F8C4 - 83 F8 0E              - cmp eax,0E { 14 }
re3demo.exe+18B9F8C7 - 0F84 F8000000         - je re3demo.exe+18B9F9C5
re3demo.exe+18B9F8CD - 83 F8 11              - cmp eax,11 { 17 }
re3demo.exe+18B9F8D0 - 0F8D EF000000         - jnl re3demo.exe+18B9F9C5
re3demo.exe+18B9F8D6 - FF C8                 - dec eax
re3demo.exe+18B9F8D8 - 83 F8 0F              - cmp eax,0F { 15 }
re3demo.exe+18B9F8DB - 0F87 40010000         - ja re3demo.exe+18B9FA21
re3demo.exe+18B9F8E1 - 48 98                 - cdqe 
re3demo.exe+18B9F8E3 - 8B 8C 87 E03F2A02     - mov ecx,[rdi+rax*4+022A3FE0]
re3demo.exe+18B9F8EA - 48 01 F9              - add rcx,rdi
// intercept a little higher in the function:
re3demo.exe+18B9F80A - 48 89 CB              - mov rbx,rcx
re3demo.exe+18B9F80D - 48 8B 49 10           - mov rcx,[rcx+10]
re3demo.exe+18B9F811 - F3 0F10 0D 031E2CF0   - movss xmm1,[re3demo.exe+8E6161C] { (0,00) }
re3demo.exe+18B9F819 - 44 0F29 44 24 60      - movaps [rsp+60],xmm8			<< INTERCEPT HERE
re3demo.exe+18B9F81F - 44 0F29 4C 24 50      - movaps [rsp+50],xmm9
re3demo.exe+18B9F825 - F3 0F11 45 10         - movss [rbp+10],xmm0
re3demo.exe+18B9F82A - F3 0F11 4D 14         - movss [rbp+14],xmm1			<< CONTINUE HERE
re3demo.exe+18B9F82F - 44 0F29 54 24 40      - movaps [rsp+40],xmm10
re3demo.exe+18B9F835 - 48 85 C9              - test rcx,rcx
re3demo.exe+18B9F838 - 74 20                 - je re3demo.exe+18B9F85A


// HUD toggle
re3demo.exe+19BAB3F2 - 49 89 D5              - mov r13,rdx
re3demo.exe+19BAB3F5 - 80 78 08 00           - cmp byte ptr [rax+08],00 { 0 }
re3demo.exe+19BAB3F9 - 0F84 E3010000         - je re3demo.exe+19BAB5E2
re3demo.exe+19BAB3FF - 48 89 7C 24 30        - mov [rsp+30],rdi
re3demo.exe+19BAB404 - 48 8B 3D ED692BEF     - mov rdi,[re3demo.exe+8E61DF8] 	<<< Read address, add 8, 0 == no HUD, 1 == HUD
re3demo.exe+19BAB40B - 80 7F 08 00           - cmp byte ptr [rdi+08],00 { 0 }
re3demo.exe+19BAB40F - 66 C7 47 0A 0000      - mov word ptr [rdi+0A],0000 { 0 }
re3demo.exe+19BAB415 - C6 47 0C 00           - mov byte ptr [rdi+0C],00 { 0 }
re3demo.exe+19BAB419 - 0F84 9A010000         - je re3demo.exe+19BAB5B9
re3demo.exe+19BAB41F - 48 8B 05 CA6115EF     - mov rax,[re3demo.exe+8D015F0] { (128) }
re3demo.exe+19BAB426 - 48 8B 48 50           - mov rcx,[rax+50]
re3demo.exe+19BAB42A - 48 85 C9              - test rcx,rcx
re3demo.exe+19BAB42D - 74 19                 - je re3demo.exe+19BAB448
re3demo.exe+19BAB42F - 80 B9 11020000 00     - cmp byte ptr [rcx+00000211],00 { 0 }

// Quaternion
// Write 1
re3demo.exe+160A768D - 48 8B 43 50           - mov rax,[rbx+50]
re3demo.exe+160A7691 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A7696 - 0F85 E8080000         - jne re3demo.exe+160A7F84
re3demo.exe+160A769C - 0F10 86 90000000      - movups xmm0,[rsi+00000090]
re3demo.exe+160A76A3 - 0F11 87 A0000000      - movups [rdi+000000A0],xmm0			<< WRITE Quaternion
re3demo.exe+160A76AA - 48 8B 43 50           - mov rax,[rbx+50]
re3demo.exe+160A76AE - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A76B3 - 0F85 CB080000         - jne re3demo.exe+160A7F84
re3demo.exe+160A76B9 - 48 8B 86 B8000000     - mov rax,[rsi+000000B8]
re3demo.exe+160A76C0 - 48 85 C0              - test rax,rax
re3demo.exe+160A76C3 - 0F84 DE020000         - je re3demo.exe+160A79A7
re3demo.exe+160A76C9 - F3 0F10 78 30         - movss xmm7,[rax+30]
re3demo.exe+160A76CE - F3 44 0F10 48 34      - movss xmm9,[rax+34]
re3demo.exe+160A76D4 - 8B 40 38              - mov eax,[rax+38]
re3demo.exe+160A76D7 - 89 87 B4000000        - mov [rdi+000000B4],eax

// Write 2:
// not needed, it will write the values written to the quaternion in write 1, so blocking the location in write 1 is enough. 
re3demo.exe+160A7842 - 48 8B 43 50             - mov rax,[rbx+50]
re3demo.exe+160A7846 - 48 83 78 18 00          - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A784B - 0F85 0F070000           - jne re3demo.exe+160A7F60
re3demo.exe+160A7851 - F3 0F10 74 24 40        - movss xmm6,[rsp+40]
re3demo.exe+160A7857 - F3 44 0F10 44 24 44     - movss xmm8,[rsp+44]
re3demo.exe+160A785E - 44 0F29 94 24 00010000  - movaps [rsp+00000100],xmm10
re3demo.exe+160A7867 - F3 44 0F10 54 24 48     - movss xmm10,[rsp+48]
re3demo.exe+160A786E - F3 0F11 B7 A0000000     - movss [rdi+000000A0],xmm6		<< Write Qx
re3demo.exe+160A7876 - F3 44 0F11 87 A4000000  - movss [rdi+000000A4],xmm8		<< Write Qy
re3demo.exe+160A787F - F3 44 0F11 97 A8000000  - movss [rdi+000000A8],xmm10		<< Write Qz
re3demo.exe+160A7888 - 44 0F29 9C 24 F0000000  - movaps [rsp+000000F0],xmm11
re3demo.exe+160A7891 - F3 44 0F10 5C 24 4C     - movss xmm11,[rsp+4C]
re3demo.exe+160A7898 - F3 44 0F11 9F AC000000  - movss [rdi+000000AC],xmm11		<< Write Qw
re3demo.exe+160A78A1 - 48 8B 43 50             - mov rax,[rbx+50]
re3demo.exe+160A78A5 - 48 83 78 18 00          - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A78AA - 0F85 9E060000           - jne re3demo.exe+160A7F4E
											   
// Timestop:
// The muls below is a safe point to intercept. The movs above it are often inside jump branches which aren't always hit.
re3demo.exe+18B02102 - 48 89 FE              - mov rsi,rdi
re3demo.exe+18B02105 - 44 38 B3 C1030000     - cmp [rbx+000003C1],r14l
re3demo.exe+18B0210C - 74 0A                 - je re3demo.exe+18B02118
re3demo.exe+18B0210E - C7 83 84030000 0000803F - mov [rbx+00000384],3F800000 { (0) }
re3demo.exe+18B02118 - F3 0F10 8B A0030000   - movss xmm1,[rbx+000003A0]
re3demo.exe+18B02120 - F3 0F10 83 84030000   - movss xmm0,[rbx+00000384]
re3demo.exe+18B02128 - 0F2F C1               - comiss xmm0,xmm1
re3demo.exe+18B0212B - 76 08                 - jna re3demo.exe+18B02135
re3demo.exe+18B0212D - F3 0F11 8B 84030000   - movss [rbx+00000384],xmm1
re3demo.exe+18B02135 - F3 0F10 8B 84030000   - movss xmm1,[rbx+00000384]
re3demo.exe+18B0213D - F3 0F10 83 84030000   - movss xmm0,[rbx+00000384]
re3demo.exe+18B02145 - F3 0F59 8B 80030000   - mulss xmm1,[rbx+00000380]		<< read time dilation. Set to 0.0 for pause, 1.0 for continue.
re3demo.exe+18B0214D - 0F5A C0               - cvtps2pd xmm0,xmm0
re3demo.exe+18B02150 - F3 0F11 8B 84030000   - movss [rbx+00000384],xmm1
re3demo.exe+18B02158 - F2 41 0F59 C1         - mulsd xmm0,xmm9
re3demo.exe+18B0215D - F2 48 0F2C C0         - cvttsd2si rax,xmm0
re3demo.exe+18B02162 - 0F5A C1               - cvtps2pd xmm0,xmm1
re3demo.exe+18B02165 - 48 01 C6              - add rsi,rax
re3demo.exe+18B02168 - F2 41 0F5E C0         - divsd xmm0,xmm8
re3demo.exe+18B0216D - 66 0F5A C0            - cvtpd2ps xmm0,xmm0

// Coords
// Write 1
re3demo.exe+160A780D - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A7812 - 0F85 48070000         - jne re3demo.exe+160A7F60
re3demo.exe+160A7818 - F3 0F10 44 24 50      - movss xmm0,[rsp+50]
re3demo.exe+160A781E - F3 0F10 4C 24 54      - movss xmm1,[rsp+54]
re3demo.exe+160A7824 - F3 0F10 54 24 58      - movss xmm2,[rsp+58]
re3demo.exe+160A782A - F3 0F11 87 80000000   - movss [rdi+00000080],xmm0			<<< Write x
re3demo.exe+160A7832 - F3 0F11 8F 84000000   - movss [rdi+00000084],xmm1			<<< Write y
re3demo.exe+160A783A - F3 0F11 97 88000000   - movss [rdi+00000088],xmm2			<<< Write z
re3demo.exe+160A7842 - 48 8B 43 50           - mov rax,[rbx+50]
re3demo.exe+160A7846 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A784B - 0F85 0F070000         - jne re3demo.exe+160A7F60
re3demo.exe+160A7851 - F3 0F10 74 24 40      - movss xmm6,[rsp+40]
re3demo.exe+160A7857 - F3 44 0F10 44 24 44   - movss xmm8,[rsp+44]
re3demo.exe+160A785E - 44 0F29 94 24 00010000  - movaps [rsp+00000100],xmm10
re3demo.exe+160A7867 - F3 44 0F10 54 24 48   - movss xmm10,[rsp+48]
re3demo.exe+160A786E - F3 0F11 B7 A0000000   - movss [rdi+000000A0],xmm6

// Write 2
re3demo.exe+160A7646 - 0F10 46 70            - movups xmm0,[rsi+70]
re3demo.exe+160A764A - 0F11 47 70            - movups [rdi+70],xmm0
re3demo.exe+160A764E - 48 8B 43 50           - mov rax,[rbx+50]
re3demo.exe+160A7652 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A7657 - 0F85 27090000         - jne re3demo.exe+160A7F84
re3demo.exe+160A765D - F3 0F10 86 80000000   - movss xmm0,[rsi+00000080]
re3demo.exe+160A7665 - F3 0F10 8E 84000000   - movss xmm1,[rsi+00000084]
re3demo.exe+160A766D - F3 0F10 96 88000000   - movss xmm2,[rsi+00000088]
re3demo.exe+160A7675 - F3 0F11 87 80000000   - movss [rdi+00000080],xmm0			<<< Write x
re3demo.exe+160A767D - F3 0F11 8F 84000000   - movss [rdi+00000084],xmm1			<<< Write y
re3demo.exe+160A7685 - F3 0F11 97 88000000   - movss [rdi+00000088],xmm2			<<< Write z
re3demo.exe+160A768D - 48 8B 43 50           - mov rax,[rbx+50]
re3demo.exe+160A7691 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A7696 - 0F85 E8080000         - jne re3demo.exe+160A7F84
re3demo.exe+160A769C - 0F10 86 90000000      - movups xmm0,[rsi+00000090]

// Fov
// Write 1
re3demo.exe+160A72B9 - 44 0F29 8C 24 10010000  - movaps [rsp+00000110],xmm9
re3demo.exe+160A72C2 - F3 44 0F10 48 34      - movss xmm9,[rax+34]
re3demo.exe+160A72C8 - 48 85 C0              - test rax,rax
re3demo.exe+160A72CB - 75 13                 - jne re3demo.exe+160A72E0
re3demo.exe+160A72CD - 45 31 C0              - xor r8d,r8d
re3demo.exe+160A72D0 - 8D 50 38              - lea edx,[rax+38]
re3demo.exe+160A72D3 - 48 89 D9              - mov rcx,rbx
re3demo.exe+160A72D6 - E8 F5E21EEC           - call re3demo.exe+22955D0
re3demo.exe+160A72DB - E9 B50C0000           - jmp re3demo.exe+160A7F95
re3demo.exe+160A72E0 - 8B 40 38              - mov eax,[rax+38]
re3demo.exe+160A72E3 - 89 82 B4000000        - mov [rdx+000000B4],eax			<< Write FOV
re3demo.exe+160A72E9 - 48 83 79 18 00        - cmp qword ptr [rcx+18],00 { 0 }
re3demo.exe+160A72EE - 0F85 A10C0000         - jne re3demo.exe+160A7F95
re3demo.exe+160A72F4 - 48 8B 8A C8000000     - mov rcx,[rdx+000000C8]
re3demo.exe+160A72FB - 44 0F29 84 24 20010000  - movaps [rsp+00000120],xmm8
re3demo.exe+160A7304 - 48 85 C9              - test rcx,rcx
re3demo.exe+160A7307 - 74 26                 - je re3demo.exe+160A732F
re3demo.exe+160A7309 - F3 0F10 8D 90000000   - movss xmm1,[rbp+00000090]
re3demo.exe+160A7311 - 48 83 C1 10           - add rcx,10 { 16 }
re3demo.exe+160A7315 - E8 166920EC           - call re3demo.exe+22ADC30
re3demo.exe+160A731A - 48 8B 43 50           - mov rax,[rbx+50]

// Write 2
re3demo.exe+160A76AE - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A76B3 - 0F85 CB080000         - jne re3demo.exe+160A7F84
re3demo.exe+160A76B9 - 48 8B 86 B8000000     - mov rax,[rsi+000000B8]
re3demo.exe+160A76C0 - 48 85 C0              - test rax,rax
re3demo.exe+160A76C3 - 0F84 DE020000         - je re3demo.exe+160A79A7
re3demo.exe+160A76C9 - F3 0F10 78 30         - movss xmm7,[rax+30]
re3demo.exe+160A76CE - F3 44 0F10 48 34      - movss xmm9,[rax+34]
re3demo.exe+160A76D4 - 8B 40 38              - mov eax,[rax+38]
re3demo.exe+160A76D7 - 89 87 B4000000        - mov [rdi+000000B4],eax		<< WRITE FOV
re3demo.exe+160A76DD - 48 8B 43 50           - mov rax,[rbx+50]
re3demo.exe+160A76E1 - 48 83 78 18 00        - cmp qword ptr [rax+18],00 { 0 }
re3demo.exe+160A76E6 - 0F85 98080000         - jne re3demo.exe+160A7F84
re3demo.exe+160A76EC - F3 0F10 86 A0000000   - movss xmm0,[rsi+000000A0]
re3demo.exe+160A76F4 - F3 0F10 8E A4000000   - movss xmm1,[rsi+000000A4]
re3demo.exe+160A76FC - F3 0F10 96 A8000000   - movss xmm2,[rsi+000000A8]
re3demo.exe+160A7704 - F3 0F11 87 90000000   - movss [rdi+00000090],xmm0
re3demo.exe+160A770C - F3 0F11 8F 94000000   - movss [rdi+00000094],xmm1

// Write 3
re3demo.exe+160A7A42 - F2 0F59 D1            - mulsd xmm2,xmm1
re3demo.exe+160A7A46 - 66 0F5A C2            - cvtpd2ps xmm0,xmm2
re3demo.exe+160A7A4A - E8 75E479EE           - call re3demo.exe+4845EC4
re3demo.exe+160A7A4F - F3 0F59 05 5D1C82EE   - mulss xmm0,[re3demo.exe+48C96B4]
re3demo.exe+160A7A57 - F3 0F5A C0            - cvtss2sd xmm0,xmm0
re3demo.exe+160A7A5B - F2 0F59 05 85440DEF   - mulsd xmm0,[re3demo.exe+517BEE8]
re3demo.exe+160A7A63 - F2 0F5A C0            - cvtsd2ss xmm0,xmm0
re3demo.exe+160A7A67 - F3 0F11 87 B4000000   - movss [rdi+000000B4],xmm0	<< WRITE FOV
re3demo.exe+160A7A6F - 48 8B 43 50           - mov rax,[rbx+50]
re3demo.exe+160A7A73 - 48 8B 48 18           - mov rcx,[rax+18]
re3demo.exe+160A7A77 - 48 85 C9              - test rcx,rcx
re3demo.exe+160A7A7A - 0F85 CE040000         - jne re3demo.exe+160A7F4E
re3demo.exe+160A7A80 - 48 85 C9              - test rcx,rcx
re3demo.exe+160A7A83 - 0F85 C5040000         - jne re3demo.exe+160A7F4E


// Sharpening
re3demo.exe+1AEB6B4E - 0F84 BC010000         - je re3demo.exe+1AEB6D10
re3demo.exe+1AEB6B54 - 48 8B 8D 904A0000     - mov rcx,[rbp+00004A90]
re3demo.exe+1AEB6B5B - 48 89 5C 24 60        - mov [rsp+60],rbx
re3demo.exe+1AEB6B60 - E8 DB844EE7           - call re3demo.exe+239F040
re3demo.exe+1AEB6B65 - 80 BF 0D010000 00     - cmp byte ptr [rdi+0000010D],00 { 0 }
re3demo.exe+1AEB6B6C - 48 89 C3              - mov rbx,rax
re3demo.exe+1AEB6B6F - 74 05                 - je re3demo.exe+1AEB6B76				<< NOP so it ends up using the jmp to BA2
re3demo.exe+1AEB6B71 - 0F57 C0               - xorps xmm0,xmm0
re3demo.exe+1AEB6B74 - EB 2C                 - jmp re3demo.exe+1AEB6BA2
re3demo.exe+1AEB6B76 - 8B 87 A4010000        - mov eax,[rdi+000001A4]				<< AA type check. TAA uses '4'. 
re3demo.exe+1AEB6B7C - 83 F8 03              - cmp eax,03 { 3 }
re3demo.exe+1AEB6B7F - 75 0A                 - jne re3demo.exe+1AEB6B8B
re3demo.exe+1AEB6B81 - F3 0F10 05 47FEABE9   - movss xmm0,[re3demo.exe+49769D0] { (0,33) }
re3demo.exe+1AEB6B89 - EB 17                 - jmp re3demo.exe+1AEB6BA2
re3demo.exe+1AEB6B8B - 83 F8 04              - cmp eax,04 { 4 }
re3demo.exe+1AEB6B8E - 75 0A                 - jne re3demo.exe+1AEB6B9A
re3demo.exe+1AEB6B90 - F3 0F10 05 FC522CEA   - movss xmm0,[re3demo.exe+517BE94] { (0,50) }

// Dof Selector
re3demo.exe+1AEF4AB0 - 89 51 4C              - mov [rcx+4C],edx						<< Set to 1 for low/no dof. default 0
re3demo.exe+1AEF4AB3 - 85 D2                 - test edx,edx
re3demo.exe+1AEF4AB5 - 74 0E                 - je re3demo.exe+1AEF4AC5
re3demo.exe+1AEF4AB7 - 83 EA 01              - sub edx,01 { 1 }
re3demo.exe+1AEF4ABA - 74 09                 - je re3demo.exe+1AEF4AC5
re3demo.exe+1AEF4ABC - 83 FA 01              - cmp edx,01 { 1 }
re3demo.exe+1AEF4ABF - 75 08                 - jne re3demo.exe+1AEF4AC9
re3demo.exe+1AEF4AC1 - 88 51 50              - mov [rcx+50],dl
re3demo.exe+1AEF4AC4 - C3                    - ret 
re3demo.exe+1AEF4AC5 - C6 41 50 00           - mov byte ptr [rcx+50],00 { 0 }
re3demo.exe+1AEF4AC9 - C3                    - ret 

// Dof Far blur
re3demo.exe+1AEF8CDA - C7 44 24 08 17B7D138  - mov [rsp+08],38D1B717 { (0) }
re3demo.exe+1AEF8CE2 - 48 8D 4C 24 08        - lea rcx,[rsp+08]
re3demo.exe+1AEF8CE7 - 48 8D 44 24 10        - lea rax,[rsp+10]
re3demo.exe+1AEF8CEC - 49 8B 50 30           - mov rdx,[r8+30]
re3demo.exe+1AEF8CF0 - F3 0F11 4C 24 10      - movss [rsp+10],xmm1
re3demo.exe+1AEF8CF6 - 48 0F46 C1            - cmovbe rax,rcx
re3demo.exe+1AEF8CFA - 48 8D 4C 24 08        - lea rcx,[rsp+08]
re3demo.exe+1AEF8CFF - 8B 00                 - mov eax,[rax]							<<< replace with XOR eax, eax
re3demo.exe+1AEF8D01 - 89 82 C4010000        - mov [rdx+000001C4],eax
re3demo.exe+1AEF8D07 - 48 8D 44 24 10        - lea rax,[rsp+10]
re3demo.exe+1AEF8D0C - 48 0F46 C1            - cmovbe rax,rcx
re3demo.exe+1AEF8D10 - F3 0F11 4C 24 10      - movss [rsp+10],xmm1
re3demo.exe+1AEF8D16 - 49 8B 48 38           - mov rcx,[r8+38]
re3demo.exe+1AEF8D1A - C7 44 24 08 17B7D138  - mov [rsp+08],38D1B717 { (0) }
re3demo.exe+1AEF8D22 - 8B 00                 - mov eax,[rax]
re3demo.exe+1AEF8D24 - 89 41 74              - mov [rcx+74],eax
re3demo.exe+1AEF8D27 - 48 8D 44 24 10        - lea rax,[rsp+10]
re3demo.exe+1AEF8D2C - 48 8D 4C 24 08        - lea rcx,[rsp+08]

This is the second hit, the first is for blur type 2. We set the blur type to 1 so we have to xor this value.

// Vignette removal
re3demo.exe+1AB0079B - 8B 87 30010000        - mov eax,[rdi+00000130]
re3demo.exe+1AB007A1 - 89 83 D0000000        - mov [rbx+000000D0],eax
re3demo.exe+1AB007A7 - 8B 87 34010000        - mov eax,[rdi+00000134]
re3demo.exe+1AB007AD - 89 83 D4000000        - mov [rbx+000000D4],eax
re3demo.exe+1AB007B3 - 8B 87 38010000        - mov eax,[rdi+00000138]
re3demo.exe+1AB007B9 - 89 83 D8000000        - mov [rbx+000000D8],eax
re3demo.exe+1AB007BF - 8B 87 3C010000        - mov eax,[rdi+0000013C]				<< Replace with xor eax, eax
re3demo.exe+1AB007C5 - 89 83 DC000000        - mov [rbx+000000DC],eax
re3demo.exe+1AB007CB - 8B 87 CC010000        - mov eax,[rdi+000001CC]
re3demo.exe+1AB007D1 - 89 83 88010000        - mov [rbx+00000188],eax
re3demo.exe+1AB007D7 - 8B 87 DC010000        - mov eax,[rdi+000001DC]
re3demo.exe+1AB007DD - 89 83 8C010000        - mov [rbx+0000018C],eax
re3demo.exe+1AB007E3 - 0F10 87 E0010000      - movups xmm0,[rdi+000001E0]
re3demo.exe+1AB007EA - 0F11 83 90010000      - movups [rbx+00000190],xmm0
re3demo.exe+1AB007F1 - 0F10 87 F0010000      - movups xmm0,[rdi+000001F0]
re3demo.exe+1AB007F8 - 0F11 83 A0010000      - movups [rbx+000001A0],xmm0

// Resolution scaling
re3demo.exe+1ABE49E3 - 48 8B 05 56CD11EE     - mov rax,[re3demo.exe+8D01740] { (178C53C0) }
re3demo.exe+1ABE49EA - 48 8D 4C 24 30        - lea rcx,[rsp+30]
re3demo.exe+1ABE49EF - F3 41 0F10 46 40      - movss xmm0,[r14+40]
re3demo.exe+1ABE49F5 - C7 44 24 30 CDCCCC3D  - mov [rsp+30],3DCCCCCD { (0) }
re3demo.exe+1ABE49FD - F3 0F59 80 B4140000   - mulss xmm0,[rax+000014B4]			<< Address of resolution scaling 1.0 is 100% 2.0 is 200%
re3demo.exe+1ABE4A05 - 48 8D 44 24 2C        - lea rax,[rsp+2C]
re3demo.exe+1ABE4A0A - 0F2F C7               - comiss xmm0,xmm7
re3demo.exe+1ABE4A0D - F3 0F11 44 24 2C      - movss [rsp+2C],xmm0
re3demo.exe+1ABE4A13 - 48 0F46 C1            - cmovbe rax,rcx
re3demo.exe+1ABE4A17 - F3 0F10 08            - movss xmm1,[rax]
re3demo.exe+1ABE4A1B - 0F2F F1               - comiss xmm6,xmm1
re3demo.exe+1ABE4A1E - 77 03                 - ja re3demo.exe+1ABE4A23
re3demo.exe+1ABE4A20 - 0F28 CE               - movaps xmm1,xmm6
